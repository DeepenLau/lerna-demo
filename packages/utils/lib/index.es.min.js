import dayjs from 'dayjs';
import relativeTime from 'dayjs/plugin/relativeTime';
import 'dayjs/locale/zh-cn';

/**
 * 根据RFC, 99%正确率的表达式 http://emailregex.com/
 */
var email = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/; // 手机正则

var cellPhone = /^1[3-9]\d{9}$/; // QQ正则

var qqPattern = /^[1-9][0-9]{4,10}$/; // url

var url = /^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=]+$/; // gitRepo url

var gitRepoUrl = /^(?:http(s)?:\/\/|git@[\w.-_]+:[\w.-_]+)[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=]+/; // app名字

var appNamePattern = /^[a-z]([-a-z0-9]*[a-z0-9])?$/; // TODO 后端分组名名正则表达式

var groupIdPattern = /^([a-zA-Z][0-9a-zA-Z]*(.[a-zA-Z][0-9a-zA-Z]*)+)$/; // artifactId正则 数字,字母,中划线

var numberLetterDashPattern = /^[a-zA-Z0-9-]+$/; // package正则 数字,字母,中划线

var packagePattern = /^([a-zA-Z][0-9a-zA-Z]*(.[a-zA-Z][0-9a-zA-Z]*)*)$/; // 固话

var landlinePhone = /((d{3,4})|d{3,4}-|s)?d{8}/;
var tableNamePattern = /^[a-zA-Z_]+$/;

var patterns = /*#__PURE__*/Object.freeze({
  __proto__: null,
  email: email,
  cellPhone: cellPhone,
  qqPattern: qqPattern,
  url: url,
  gitRepoUrl: gitRepoUrl,
  appNamePattern: appNamePattern,
  groupIdPattern: groupIdPattern,
  numberLetterDashPattern: numberLetterDashPattern,
  packagePattern: packagePattern,
  landlinePhone: landlinePhone,
  tableNamePattern: tableNamePattern
});

dayjs.locale('zh-cn'); // 全局使用简体中文

dayjs.extend(relativeTime);
var formatDate = function formatDate(time) {
  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'YYYY-MM-DD HH:mm:ss';

  if (!time) {
    return '';
  }

  return dayjs(time).format(format);
}; // 格式化为几天前

var dateFrom = function dateFrom(time) {
  if (!time) {
    return '';
  }

  return dayjs().from(dayjs(time));
};
var get1stPath = function get1stPath(path) {
  return path.substr(1).split('/')[0];
}; // eg:取path#/a/b的a
// 首字母大写

var upper1stLetter = function upper1stLetter(str) {
  return str[0].toUpperCase() + str.substr(1);
}; // 获取动态路由path

var getDynamicPath = function getDynamicPath(path, route) {
  var startFlag = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : /^:/;
  return path.split('/').map(function (item) {
    return startFlag.test(item) ? route.params[item.substring(1)] : item;
  }).join('/');
}; // 设置动态路由path

var setDynamicPath = function setDynamicPath(path, routeParmas) {
  Object.keys(routeParmas).forEach(function (key) {
    path = path.replace('_' + key, routeParmas[key]);
  });
  return path;
}; // json字符传返回json格式

var JsonParse = function JsonParse(str) {
  return JSON.parse(str || '{}');
}; // 参数：毫秒
// 格式为一个包含时、分、秒的对象
// {
//   hours: 1,  //时
//   minutes: 1,   //分
//   seconds: 1 // 秒
// }

var formatDuring = function formatDuring(mss) {
  var hours = parseInt(mss % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));
  var minutes = parseInt(mss % (1000 * 60 * 60) / (1000 * 60));
  var seconds = mss % (1000 * 60) / 1000;
  return {
    hours: hours,
    minutes: minutes,
    seconds: seconds
  };
};

var formatters = /*#__PURE__*/Object.freeze({
  __proto__: null,
  formatDate: formatDate,
  dateFrom: dateFrom,
  get1stPath: get1stPath,
  upper1stLetter: upper1stLetter,
  getDynamicPath: getDynamicPath,
  setDynamicPath: setDynamicPath,
  JsonParse: JsonParse,
  formatDuring: formatDuring
});

export { formatters, patterns };
